function rds-command() {
  command="$1"

  POSTGRES_CONN_STRING="user=external password=67fd5883800fe3b6d294 host=localhost port=5432 dbname=external sslmode=allow"
  user=$(echo $POSTGRES_CONN_STRING | sed 's/.*user=\([^ ]*\).*/\1/')
  password=$(echo $POSTGRES_CONN_STRING | sed 's/.*password=\([^ ]*\).*/\1/')
  host=$(echo $POSTGRES_CONN_STRING | sed 's/.*host=\([^ ]*\).*/\1/')
  database=$(echo $POSTGRES_CONN_STRING | sed 's/.*dbname=\([^ ]*\).*/\1/')
  
  PGPASSWORD=$password psql -h $host -U $user -d $database -c "$command"
}

# FIXME: remove when we move to RDS
# connect to timescale DB
function connect-timescale() {
  if [[ -z $CONTEXT ]];then
    echo "CONTEXT is required"
    return
  fi
  if [[ -z $NAMESPACE ]];then
    echo "NAMESPACE is required"
    return
  fi

  kubectl --context $CONTEXT -n $NAMESPACE exec -it timescaledb-0 -c timescaledb -- bash -c 'PGPASSWORD=$PATRONI_speedscale_PASSWORD psql --user speedscale $TIMESCALE_DB_NAME'
}

# connect to DB based on name
function connect-db() {
  NAME=$1
  if [[ -z $NAME ]];then
    echo "DB name is required"
    return
  fi

  if [[ "$NAME" =~ '^usr-mgmt' ]];then
    echo "connecting to usr-mgmt DB..."
    connect-usr-mgmt
  elif [[ "$NAME" =~ '^timescale' ]];then
    echo "connecting to timescale DB..."
    connect-timescale
  fi

  echo "no DB matched name $NAME"
  return
}

