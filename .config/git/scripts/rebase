#!/usr/bin/env bash

set -eou pipefail

force=false
while getopts "f" opt; do
  case "$opt" in
    f) force=true ;;
    *) echo "Usage: $0 [-f]"; exit 1 ;;
  esac
done

function op_exit() {
  if [ "$?" -ne 0 ]; then
    echo
    echo "======================"
    echo "=== !!! FAILED !!! ==="
    echo "======================"
  else
    echo
    echo "==============="
    echo "=== SUCCESS ==="
    echo "==============="
  fi

}
trap op_exit EXIT

# ensure we are in the right dir
cd "$(dirname "$0")"

{
  echo "======================"
  echo "=== pulling master ==="
	echo "======================"

  pushd master > /dev/null

  if ! $force; then
    status=$(git pull --autostash --rebase --ff-only)
      echo "$status"

    if [ "$status" == "Already up to date." ]; then
      echo "Nothing to do."
      exit 0
    fi
  fi


  worktrees=$(git worktree list | awk '{print $1}' | grep -v 'master' || true)

  popd > /dev/null
}

function rebase() {
  echo
  echo "====================="
  echo "=== rebasing ${1} ==="
  echo "====================="

  pushd "$1" > /dev/null

  git rebase --autostash origin/master

  popd > /dev/null
}

echo
for d in $worktrees; do
	rebase "$d"
done

